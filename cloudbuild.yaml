steps:
  # Build du backend
  - name: "gcr.io/cloud-builders/docker"
    args: ["build", "-t", "gcr.io/$PROJECT_ID/backend", "./backend"]

  # Build du frontend
  - name: "gcr.io/cloud-builders/docker"
    args: ["build", "-t", "gcr.io/$PROJECT_ID/frontend", "./frontend"]

  # Push des images
  - name: "gcr.io/cloud-builders/docker"
    args: ["push", "gcr.io/$PROJECT_ID/backend"]
  - name: "gcr.io/cloud-builders/docker"
    args: ["push", "gcr.io/$PROJECT_ID/frontend"]

  # Déploiement du backend avec Cloud SQL et secret
  - name: "gcr.io/google.com/cloudsdktool/cloud-sdk"
    entrypoint: "gcloud"
    args:
      [
        "run",
        "deploy",
        "backend-service",
        "--image",
        "gcr.io/$PROJECT_ID/backend",
        "--region",
        "europe-west1",
        "--allow-unauthenticated",
        "--platform",
        "managed",
        "--port",
        "8080",
        "--add-cloudsql-instances",
        "$PROJECT_ID:europe-west1:poke-instance",
        "--set-secrets",
        "DB_PASSWORD=mysql-password:latest",
        "--set-env-vars",
        "SPRING_DATASOURCE_USERNAME=pokeuser",
      ]

  # Déploiement du frontend
  - name: "gcr.io/google.com/cloudsdktool/cloud-sdk"
    entrypoint: "gcloud"
    args:
      [
        "run",
        "deploy",
        "frontend-service",
        "--image",
        "gcr.io/$PROJECT_ID/frontend",
        "--region",
        "europe-west1",
        "--allow-unauthenticated",
        "--platform",
        "managed",
        "--port",
        "80",
      ]

images:
  - "gcr.io/$PROJECT_ID/backend"
  - "gcr.io/$PROJECT_ID/frontend"
